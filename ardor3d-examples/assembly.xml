<?xml version="1.0" encoding="UTF-8"?>
<assembly>
	<!-- 
	When unzipped, run with:
	java -Djava.library.path=lib -jar ardor3d-examples-...jar
	 -->
    <id>release</id>
    <formats>
        <format>zip</format>
    </formats>
    <files>
        <file>
            <source>target/${project.artifactId}-${project.version}.jar</source>
            <outputDirectory>/</outputDirectory>
        </file>
    </files>
    <fileSets>
        <fileSet>
            <directory>target/natives</directory>
            <outputDirectory>lib</outputDirectory>
            <!-- This is kind of a workaround. Ideally, we would tell
                 the maven-nativedependencies-plugin to *not* unpack the
                 jogl/gluegen native jars. Jogl has its own native library
                 classloader which unpacks the jars. At the moment, there is no
                 other choice if all platforms should be supported, because the
                 filenames of the native libs are overlapping each other in jogl
                 (e.g. for natives-linux-amd64 and natives-linux-i586).  -->
            <excludes>
            	<exclude>*jogl*</exclude>
            	<exclude>*nativewindow*</exclude>
            	<exclude>*newt*</exclude>
            	<exclude>*gluegen*</exclude>
            	<exclude>META-INF/</exclude>
            </excludes>
        </fileSet>
    </fileSets>
    <dependencySets>
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <useStrictFiltering>true</useStrictFiltering>
            <excludes>
            	<exclude>*:lwjgl*:*:natives-*</exclude>
            	<exclude>*:jinput*:*:natives-*</exclude>
            </excludes>
            <outputDirectory>lib</outputDirectory>
        </dependencySet>
    </dependencySets>
</assembly>
