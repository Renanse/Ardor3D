/**
 * Copyright (c) 2008-2012 Ardor Labs, Inc.
 *
 * This file is part of Ardor3D.
 *
 * Ardor3D is free software: you can redistribute it and/or modify it 
 * under the terms of its license which may be found in the accompanying
 * LICENSE file or at <http://www.ardor3d.com/LICENSE>.
 */

package com.ardor3d.extension.ui.text;

import com.ardor3d.math.ColorRGBA;
import com.ardor3d.math.type.ReadOnlyColorRGBA;
import com.ardor3d.renderer.IndexMode;
import com.ardor3d.scenegraph.Mesh;
import com.ardor3d.scenegraph.hint.CullHint;
import com.ardor3d.scenegraph.hint.LightCombineMode;
import com.ardor3d.scenegraph.hint.TextureCombineMode;
import com.ardor3d.ui.text.BMFont;
import java.nio.FloatBuffer;

/**
 * Text spatial which uses textures generated by UIFont
 */
public class TextMesh extends Mesh {

    protected ColorRGBA _tempClr = new ColorRGBA(1, 1, 1, 1);
    protected ColorRGBA _textClr = new ColorRGBA(1, 1, 1, 1);
    private BMFont.RenderStateSetter _blendStateSetter = null;
    private BMFont.RenderStateSetter _alphaStateSetter = null;

    public TextMesh() {
        super("text");
        getMeshData().setIndexMode(IndexMode.Triangles);
        getSceneHints().setLightCombineMode(LightCombineMode.Off);
        getSceneHints().setTextureCombineMode(TextureCombineMode.Replace);

        // -- never cull
        setModelBound(null);
        getSceneHints().setCullHint(CullHint.Never);

        // -- default to non-pickable
        getSceneHints().setAllPickingHints(false);

    }
    /*
     * Change mesh transparencies
     */

    public void setOpacity(float alpha) {
        // Since changing the alpha is a costly operation because we
        // have to change the whole color buffer, we check if the new alpha 
        // is different from the current one.
        if (_tempClr.getAlpha() != alpha) {
            _tempClr.set(_textClr);
            _tempClr.setAlpha(alpha);
            setDefaultColor(_tempClr);

            // From the code in TextFactory, the TextMesh's color is 
            // stored in a color buffer because each letters can have it's own color.
            // So it doesn't use the mesh's default color.
            // If we want to change the opacity, we have to go through the buffer
            // and change the alpha for each vertices in the buffer.        
            FloatBuffer colorBuf = _meshData.getColorBuffer();
            if (colorBuf != null) {
                colorBuf.rewind();
                for (int x = 0, cLength = colorBuf.remaining(); x < cLength; x += 4) {
                    colorBuf.get(); // skip (don't change) red
                    colorBuf.get(); // skip (don't change) green
                    colorBuf.get(); // skip (don't change) blue
                    colorBuf.put(alpha); // only set the alpha value.
                }
                colorBuf.flip();
            }
        }
    }

    @Override
    public void setDefaultColor(final ReadOnlyColorRGBA clr) {
        _textClr.set(clr);
        super.setDefaultColor(_textClr);
    }
}
